[{"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/index.js":"1","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/App.js":"2","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/reportWebVitals.js":"3","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Profile.js":"4","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/NavBar.js":"5","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/MainDash.js":"6","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/FormDash.js":"7","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/CreateForm.js":"8","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Workflows/WorkflowDash.js":"9","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Accounts/AccountDash.js":"10","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Accounts/AccountView.js":"11","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Workflows/WorkflowView.js":"12","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/apiCalls.js":"13","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Accounts/EditVendorAccount.js":"14","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Accounts/RemoveAccount.js":"15","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/AssignWorkflowsToUser.js":"16","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Accounts/CreateVendorAccount.js":"17","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Accounts/CreateUserAccount.js":"18","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Accounts/FollowUpAccount.js":"19","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Workflows/CreateWorkflow.js":"20","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Workflows/DeleteWorkflow.js":"21","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Workflows/AssignNewUser.js":"22","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Workflows/UpdateWorkflow.js":"23","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Accounts/EditUserAccount.js":"24","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Approver/ApproverDash.js":"25","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Login.js":"26","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/WithoutNav.js":"27","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/WithNav.js":"28","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/useToken.js":"29"},{"size":634,"mtime":1677397402310,"results":"30","hashOfConfig":"31"},{"size":2004,"mtime":1679802415385,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1676029136417,"results":"33","hashOfConfig":"31"},{"size":0,"mtime":1676118629333,"results":"34","hashOfConfig":"31"},{"size":3033,"mtime":1679812092366,"results":"35","hashOfConfig":"31"},{"size":117,"mtime":1676207158593,"results":"36","hashOfConfig":"31"},{"size":94,"mtime":1676119639640,"results":"37","hashOfConfig":"31"},{"size":5971,"mtime":1678172532139,"results":"38","hashOfConfig":"31"},{"size":3945,"mtime":1679579976823,"results":"39","hashOfConfig":"31"},{"size":8657,"mtime":1679813517886,"results":"40","hashOfConfig":"31"},{"size":11457,"mtime":1679596319445,"results":"41","hashOfConfig":"31"},{"size":5232,"mtime":1679579976824,"results":"42","hashOfConfig":"31"},{"size":2739,"mtime":1679579976819,"results":"43","hashOfConfig":"31"},{"size":8757,"mtime":1679579198810,"results":"44","hashOfConfig":"31"},{"size":3837,"mtime":1679507417425,"results":"45","hashOfConfig":"31"},{"size":4182,"mtime":1677897900922,"results":"46","hashOfConfig":"31"},{"size":8803,"mtime":1679812300969,"results":"47","hashOfConfig":"31"},{"size":5586,"mtime":1679812320160,"results":"48","hashOfConfig":"31"},{"size":3332,"mtime":1676652236414,"results":"49","hashOfConfig":"31"},{"size":3545,"mtime":1679579976821,"results":"50","hashOfConfig":"31"},{"size":2215,"mtime":1679579976822,"results":"51","hashOfConfig":"31"},{"size":2065,"mtime":1679579976821,"results":"52","hashOfConfig":"31"},{"size":3304,"mtime":1679579976822,"results":"53","hashOfConfig":"31"},{"size":5979,"mtime":1679508107146,"results":"54","hashOfConfig":"31"},{"size":3920,"mtime":1679596937023,"results":"55","hashOfConfig":"31"},{"size":4327,"mtime":1679811550027,"results":"56","hashOfConfig":"31"},{"size":98,"mtime":1679745745548,"results":"57","hashOfConfig":"31"},{"size":188,"mtime":1679745865358,"results":"58","hashOfConfig":"31"},{"size":477,"mtime":1679802877560,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"swus26",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"63"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"63"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"63"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"63"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/index.js",[],[],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/App.js",["157","158","159"],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/reportWebVitals.js",[],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Profile.js",[],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/NavBar.js",["160","161","162","163","164","165","166","167"],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/MainDash.js",[],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/FormDash.js",[],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/CreateForm.js",["168","169","170","171","172","173","174"],[],"import React, {useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { v4 as uuid } from 'uuid';\nimport update from 'immutability-helper';\nimport { jsPDF } from 'jspdf';\n// import '../index.css'; //tailwind\n\nconst ITEM_TYPE = 'question';\n\nconst inputTypes = [\n  { value: 'text', label: 'Text Input' },\n  { value: 'radio', label: 'Radio Button' },\n  { value: 'checkbox', label: 'Checkbox' },\n  { value: 'select', label: 'Dropdown' },\n  { value: 'file', label: 'File Upload' }\n];\n\n\nfunction CreateForm(){\n  // const FormQuestion = ({ question, index, moveQuestion }) => {\n  //   const ref = React.useRef(null);\n  //   const [, drop] = useDrop({\n  //     accept: ITEM_TYPE,\n  //     hover(item, monitor) {\n  //       if (!ref.current) {\n  //         return;\n  //       }\n  //       const dragIndex = item.index;\n  //       const hoverIndex = index;\n  //       if (dragIndex === hoverIndex) {\n  //         return;\n  //       }\n  //       const hoverBoundingRect = ref.current.getBoundingClientRect();\n  //       const hoverMiddleY =\n  //         (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n  //       const clientOffset = monitor.getClientOffset();\n  //       const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n  //       if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n  //         return;\n  //       }\n  //       if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n  //         return;\n  //       }\n  //       moveQuestion(dragIndex, hoverIndex);\n  //       item.index = hoverIndex;\n  //     }\n  //   });\n  //   const [{ isDragging }, drag] = useDrag({\n  //     item: { type: ITEM_TYPE, id: question.id, index },\n  //     collect: monitor => ({\n  //       isDragging: monitor.isDragging()\n  //     })\n  //   });\n  //   const opacity = isDragging ? 0 : 1;\n  //   drag(drop(ref));\n  //   return (\n  //     <div ref={ref} style={{ opacity }}>\n  //       <Form.Group>\n  //         <Form.Label>Question {index + 1}</Form.Label>\n  //         <Form.Control type=\"text\" defaultValue={question.label} />\n  //       </Form.Group>\n  //       <Form.Group>\n  //         <Form.Label>Type</Form.Label>\n  //         <Form.Control\n  //           as=\"select\"\n  //           defaultValue={question.type}\n  //           onChange={e =>\n  //             moveQuestion(\n  //               index,\n  //               index,\n  //               e.target.value,\n  //               question.options\n  //             )\n  //           }\n  //         >\n  //           {inputTypes.map(inputType => (\n  //             <option key={inputType.value} value={inputType.value}>\n  //               {inputType.label}\n  //             </option>\n  //           ))}\n  //         </Form.Control>\n  //       </Form.Group>\n  //       {question.type === 'select' ||\n  //       question.type === 'radio' ||\n  //       question.type === 'checkbox' ? (\n  //         <Form.Group>\n  //           <Form.Label>Options (comma-separated)</Form.Label>\n  //           <Form.Control\n  //             type=\"text\"\n  //             defaultValue={question.options.join(',')}\n  //             onChange={e =>\n  //               moveQuestion(\n  //                 index,\n  //                 index,\n  //                 question.type,\n  //                 e.target.value.split(',')\n  //               )\n  //             }\n  //           />\n  //         </Form.Group>\n  //       ) : null}\n  //     </div>\n  //   );\n  // };\n\n    const [questions, setQuestions] = useState([\n      {\n        id: uuid(),\n        label: '',\n        type: 'text',\n        options: []\n      }\n    ]);\n  \n    const addQuestion = () =>\n      setQuestions([\n        ...questions,\n        {\n          id: uuid(),\n          label: '',\n          type: 'text',\n          options: []\n        }\n      ]);\n  \n    const moveQuestion = (dragIndex, hoverIndex, type, options) => {\n      const dragQuestion = questions[dragIndex];\n      setQuestions(\n        update(questions, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragQuestion]\n          ],\n          [hoverIndex]: {\n            type: { $set: type },\n            options: { $set: options }\n          }\n        })\n      );\n    };\n  \n    const updateQuestionLabel = (index, label) => {\n      setQuestions(\n        update(questions, {\n          [index]: { label: { $set: label } }\n        })\n      );\n    };\n  \n    const removeQuestion = index => {\n      setQuestions(\n        update(questions, {\n          $splice: [[index, 1]]\n        })\n      );\n    };\n  \n    const onSubmit = e => {\n      e.preventDefault();\n      const pdf = new jsPDF();\n      questions.forEach((question, index) => {\n        pdf.text(`Question ${index + 1}: ${question.label}`, 10, 10 + 20 * index);\n        if (\n          question.type === 'select' ||\n          question.type === 'radio' ||\n          question.type === 'checkbox'\n        ) {\n          pdf.text(\n            `Options: ${question.options.join(', ')}`,\n            10,\n            15 + 20 * index\n          );\n        }\n        pdf.addPage();\n      });\n      pdf.save('form.pdf');\n    };\n\n\n  return (\n    <div>\n      <h1>Form Editor</h1>\n      <Form onSubmit={() => onSubmit()}>\n        <Form.Group>\n          <Form.Label>Title</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter form title\" />\n        </Form.Group>\n        {/* {questions.map((question, index) => (\n          <FormQuestion\n            key={question.id}\n            question={question}\n            index={index}\n            moveQuestion={moveQuestion}\n            updateQuestionLabel={updateQuestionLabel}\n            removeQuestion={removeQuestion}\n          />\n        ))} */}\n        <Button variant=\"primary\" type=\"button\" onClick={addQuestion}>\n          Add Question\n        </Button>\n        <Button variant=\"primary\" type=\"submit\">\n          Generate PDF\n        </Button>\n      </Form>\n    </div>\n  );\n  \n}\nexport default CreateForm;\n\n       \n","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Workflows/WorkflowDash.js",[],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Accounts/AccountDash.js",["175","176","177","178","179","180","181","182","183","184","185","186","187","188","189"],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Accounts/AccountView.js",["190","191","192","193","194"],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Workflows/WorkflowView.js",["195","196","197","198"],[],"import { IoGitPullRequestOutline } from 'react-icons/io5';\n\nimport { React, useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport DeleteWorkflow from './DeleteWorkflow';\nimport AssignNewUser from './AssignNewUser';\nimport UpdateWorkflow from './UpdateWorkflow';\nimport { getIndividualAssignedWorkflow } from '../../../apiCalls';\n\nfunction WorkflowView() {\n\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const workflow = location.state.workflow;\n    const [workflowAssignedUsers, setWorkflowAssignedUsers] = useState([]);\n\n    // useEffect(() => {\n    //     getIndividualAssignedWorkflow(workflow.id)\n    //         .then(function (response) {\n    //             // console.log(response.data)\n    //             if (response.data.length > 0) {\n    //                 setWorkflowAssignedUsers(response.data)\n    //             } else {\n    //                 setWorkflowAssignedUsers([])\n    //             }\n    //         })\n\n    //     // eslint-disable-next-line\n    // }, [])\n\n    return (\n        <>\n            <div className=\"rounded-t-3xl mx-10 mt-10 h-screen py-8 px-20 shadow-2xl\">\n                <div className=\"bg-white\">\n\n                    <div className=\"flex flex-wrap mt-10 mb-6\">\n                        <div className=\"mr-3\">\n                            <IoGitPullRequestOutline size={70} color=\"3278AE\" />\n                        </div>\n                        <div className=\"flex-auto\">\n                            <p className=\"font-thin mt-1\">ID: {workflow.id}</p>\n                            <h2 className=\"text-3xl font-semibold text-blue\">{workflow.workflowName}</h2>\n                        </div>\n                        <div className=\"flex mt-5\">\n                            <AssignNewUser></AssignNewUser>\n                            <UpdateWorkflow workflow={workflow}></UpdateWorkflow>\n                            <DeleteWorkflow workflow={workflow}></DeleteWorkflow>\n                        </div>\n                    </div>\n                    <div className=\"grid grid-rows-1 grid-cols-4 gap-x-2 gap-y-8 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6\">\n                        {(workflow.workflowList).map(form =>\n                            <div className=\"card w-44 bg-base-100 border border-light-blue m-3 drop-shadow-xl\" key={workflow.id}>\n                                <div className=\"card-body text-center\">\n                                    <h2 className=\"card-title\">{form}</h2>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                    <div className='grid grid-rows-1 grid-cols-2 mt-5'>\n                        <div className=\"card w-[35rem] bg-base-100 ml-3 drop-shadow-xl\">\n                            <div className=\"card-body text-left\">\n                                <div>\n                                    <h2 className=\"text-xl font-semibold text-blue\">Included Forms</h2>\n                                </div>\n                                <div className=\"card w-80\">\n                                    <div className=\"card-body text-left\">\n                                        <table>\n                                            <tbody>\n                                                {(workflow.workflowList).map(form =>\n                                                    <div key={workflow.id}>\n                                                        <tr className=\"card-title mb-2\">{form}</tr>\n                                                    </div>\n                                                )}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card w-[35rem] bg-base-100 ml-3 drop-shadow-xl\">\n                            <div className=\"card-body text-left\">\n                                <div>\n                                    <h2 className=\"text-xl font-semibold text-blue\">Assigned Users</h2>\n                                </div>\n                                <div className=\"card w-80\">\n                                    <div className=\"card-body text-left text-blue\">\n                                        <table>\n                                            <tbody>\n                                                <tr className=\"card-title mb-2\">{workflowAssignedUsers.assignedAdminId}</tr>\n                                                <tr className=\"card-title mb-2\">{workflowAssignedUsers.assignedVendorId}</tr>\n                                                {/* <tr className=\"card-title mb-2\">User 3</tr> */}\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n\n    )\n}\n\nexport default WorkflowView;","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/apiCalls.js",["199","200"],["201"],"import axios from 'axios';\n\nimport accountsData from './mock-data/accounts.json';\nimport workflowsData from './mock-data/workflows.json';\n\n// INTERCEPTOR\n\nconst axiosClient = axios.create({\n  baseURL: `http://127.0.0.1:8080/`,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n});\n\naxiosClient.interceptors.response.use(\n  function (response) {\n    return response;\n  }, \n  function (error) {\n    console.log(\"error: \", error)\n\n    let res = error.response;\n    console.log(\"res: \", res)\n    if (res.status === 401) {\n      window.location.href = \"http://localhost:3000/\";\n    }\n    console.error(error);\n    return Promise.reject(error);\n  }\n);\n\n// eslint-disable-next-line\nexport default {\n  axiosClient\n};\n\nexport function getUsers() {\n  return axiosClient.get(\"/api/v1/users\");  \n}\n\nexport function getVendors() {\n  return axiosClient.get(\"/api/v1/users/vendors\");  \n}\n\nexport function getUsersByType(userType) { // ADMIN, APPROVER\n  return axiosClient.get(`/api/v1/users/${userType}`);  \n}\n\nexport function getVendorsByCompany(companyName) { // {companyName}\n  return axiosClient.get(`/api/v1/users/vendors/${companyName}`);  \n}\n\nexport function getUserById(id) { // unique ID\n  return axiosClient.get(`/api/v1/users/${id}`);  \n}\n\nexport function getVendorById(id) { // unique ID\n  return axiosClient.get(`/api/v1/users/vendors/${id}`);  \n}\n\nexport function createUser(data) { \n  return axiosClient.post(\"/api/v1/users/create\", JSON.stringify(data));  \n}\n\nexport function createVendor(data) { \n  return axiosClient.post(\"/api/v1/users/vendors/create\", JSON.stringify(data));  \n}\n\nexport function deleteUser(id) { // unique ID\n  return axiosClient.delete(`/api/v1/users/delete/${id}`);  \n}\n\nexport function deleteVendor(id) { // unique ID\n  return axiosClient.delete(`/api/v1/users/vendors/delete/${id}`);  \n}\n\nexport function updateUser(data) {\n  return axiosClient.put(\"/api/v1/users/update\", JSON.stringify(data));  \n}\n\nexport function updateVendor(data) {\n  return axiosClient.put(\"/api/v1/users/vendors/update\", JSON.stringify(data));  \n}\n\n\nexport function getWorkflows() {\n  return axiosClient.get(\"/api/v1/workflow\");  \n}\n\nexport function getAssignedWorkflows() {\n  return axiosClient.get(\"/api/v1/workflow/assigned\");  \n}\n\nexport function getWorkflowsByVendor(id) {\n  return axiosClient.get(`/api/v1/workflow/assigned/vendor/${id}`);  \n}\n\nexport function getIndividualAssignedWorkflow(id) {\n  return axiosClient.get(`/api/v1/workflow/assigned/${id}`);  \n}\n\nexport function createWorkflowTemplate(data) { \n  return axiosClient.post(\"/api/v1/workflow\", JSON.stringify(data));  \n}\n\nexport function deleteWorkflow(id) { // unique ID\n  return axiosClient.delete(`/api/v1/workflow/${id}`);  \n}","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Accounts/EditVendorAccount.js",["202","203","204","205","206","207","208","209","210"],[],"import React, { useState } from 'react';\n\nimport { MdEdit } from \"react-icons/md\";\n\nimport { useNavigate } from 'react-router-dom';\n\nimport { updateVendor } from '../../../apiCalls';\n\nfunction EditVendorAccount(props) {\n\n    console.log(props.account)\n\n    const navigate = useNavigate();\n\n    const [id, setId] = useState(props.account.id);\n    const [name, setName] = useState(props.account.name);\n    const [email, setEmail] = useState(props.account.email);\n    const [contactNum, setContactNum] = useState(props.account.contactNum);\n    const [password, setPassword] = useState(props.account.password);\n\n    const [companyName, setCompanyName] = useState(props.account.companyName);\n    const [regNumber, setRegNumber] = useState(props.account.regNumber);\n    const [bizNature, setBizNature] = useState(props.account.bizNature);\n    const [gstNumber, setGstNumber] = useState(props.account.gstnumber);\n\n\n    const validateForm = () => {\n        if (id.length == 0 || name.length == 0 || email.length == 0 || contactNum.length == 0 || password.length == 0 ||\n            companyName.length == 0 || regNumber.length == 0 || bizNature.length == 0 || gstNumber == 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    const handleSave = () => {\n        console.log(\"INSIDE HANDLE SAVE\");\n        updateVendor({id: id, name: name, email: email, password: password, userType: \"VENDOR\", companyName: companyName, regNumber: regNumber, bizNature: bizNature, contactNum: contactNum, gstnumber: gstNumber})\n            .then(function(response){\n                // navigate('/accounts');\n                navigate(`/accounts/${id}`, {state: {account: {id: id, name: name, email: email, password: password, userType: \"VENDOR\", companyName: companyName, regNumber: \"4567\", bizNature: \"Love\", contactNum: \"12345678\", gstnumber: \"GST456\"}}});\n            })\n            .catch(function(error){\n                setName(props.account.name)\n                setCompanyName(props.account.companyName)\n                setEmail(props.account.email)\n            })\n    }\n\n    return (\n        <>\n            <label htmlFor=\"EditVendorAccount\" className=\"btn btn-xs btn-link text-lg text-blue hover:opacity-75\">\n                <MdEdit></MdEdit>\n            </label>\n            {/* <button className=\"text-blue hover:opacity-75\" htmlFor=\"EditVendorAccount\"><MdEdit></MdEdit></button> */}\n\n            \n            <input type=\"checkbox\" id=\"EditVendorAccount\" className=\"modal-toggle\" />\n            <div className=\"modal text-left\">\n            <div className=\"modal-box max-w-5xl relative py-12 px-20\">\n                <label htmlFor=\"EditVendorAccount\" className=\"btn btn-sm btn-circle bg-red border-transparent absolute right-20 top-12\">✕</label>\n                <h1 className=\"text-3xl mb-3 font-semibold text-blue\">Edit Account</h1>\n\n                <form>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div id=\"userDetails\">\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"id\">\n                                    ID\n                                </label>\n                                <input defaultValue={id} onChange={e => setId(e.target.value)} className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"id\" type=\"text\"/>\n                            </div>\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"firstname\">\n                                    Name\n                                </label>\n                                <input defaultValue={name} onChange={e => setName(e.target.value)} className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"firstname\" type=\"text\"/>\n                            </div>\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"email\">\n                                    Email\n                                </label>\n                                <input defaultValue={email} onChange={e => setEmail(e.target.value)} className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"email\" type=\"text\"/>\n                            </div>\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"contactNum\">\n                                    Contact Number\n                                </label>\n                                <input defaultValue={contactNum} onChange={e => setContactNum(e.target.value)} className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"contactNum\" type=\"text\"/>\n                            </div>\n                            <div className=\"mb-6\">\n                                <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"password\">\n                                    Password\n                                </label>\n                                <input defaultValue={password} onChange={e => setPassword(e.target.value)} className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\" id=\"password\" type=\"password\" placeholder=\"******************\"/>\n                            </div>\n                        </div>\n                        <div id=\"companyDetails\">\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"companyName\">\n                                Company Name\n                            </label>\n                            <input defaultValue={companyName} onChange={e => setCompanyName(e.target.value)} className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"companyName\" type=\"text\"/>\n                        </div>\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"regNumber\">\n                                Company Registration Number\n                            </label>\n                            <input defaultValue={regNumber} onChange={e => setRegNumber(e.target.value)} className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"regNumber\" type=\"text\"/>\n                        </div>\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"bizNature\">\n                                Nature of Business\n                            </label>\n                            <input defaultValue={bizNature} onChange={e => setBizNature(e.target.value)} className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"bizNature\" type=\"text\"/>\n                        </div>\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"gstNumber\">\n                                GST Number\n                            </label>\n                            <input defaultValue={gstNumber} onChange={e => setGstNumber(e.target.value)} className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"gstNumber\" type=\"text\"/>\n                        </div>\n                            \n                        </div>\n                    </div>                    \n                    <div className=\"mt-6 flex justify-center\">\n                        {validateForm()}\n                        <label onClick={() => {handleSave()}} htmlFor=\"EditVendorAccount\" className=\"btn btn-md btn-wide bg-cyan border-transparent outline-none rounded-full\" type=\"button\" disabled={(validateForm() !== true) ? true : false}>\n                            Save Changes\n                        </label>\n                    </div>\n                    </form>\n            </div>\n            </div>\n        </>\n        \n    )\n}\n\nexport default EditVendorAccount;","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Accounts/RemoveAccount.js",["211","212"],[],"import React, { useState } from 'react';\n\nimport { MdDelete } from \"react-icons/md\";\n\nimport { useNavigate } from 'react-router-dom';\n\nimport { deleteUser } from '../../../apiCalls';\nimport { deleteVendor } from '../../../apiCalls';\n\nfunction RemoveAccount(props) {\n\n    const navigate = useNavigate();\n\n    console.log(\"removeAccount –> props.accounts: \", props.accounts)\n    // even though props.accounts is accurate, it isnt updating in the modal fast enough\n\n    const [id] = useState(props.accounts[0].id)\n    const [userType] = useState(props.accounts[0].userType)\n    const [name] = useState(props.accounts[0].name)\n    const [companyName] = useState(props.accounts[0].companyName)\n    const [accountsToRemove, setAccountsToRemove] = useState(props.accounts);\n\n    const handleDelete = () => {\n        console.log(\"INSIDE HANDLE DELETE\");\n        console.log(id);\n\n        if (userType == \"VENDOR\") {\n            deleteVendor(id)\n                .then(function(response){\n                    navigate(\"/accounts\")\n                    \n                })\n                .catch(function(error){\n                    console.log(\"DELETE ERROR\")})\n        } else {\n            deleteUser(id)\n                .then(function(response){\n                    navigate(\"/accounts\")\n                    \n                })\n                .catch(function(error){\n                    console.log(\"DELETE ERROR\")})\n        }\n\n    }\n\n    return (\n        <>\n            <label htmlFor=\"RemoveAccount\" className=\"btn bg-red border-transparent rounded-full ml-2\">\n                <MdDelete className=\"mr-3\"></MdDelete>\n                Remove Account\n            </label>\n\n            <input type=\"checkbox\" id=\"RemoveAccount\" className=\"modal-toggle\" />\n            <div className=\"modal\">\n            <div className=\"modal-box max-w-2xl relative py-12 px-20\">\n                <label htmlFor=\"RemoveAccount\" className=\"btn btn-sm btn-circle bg-red border-transparent absolute right-20 top-12\">✕</label>\n                <div className=\"mb-3\">\n                    <h1 className=\"text-3xl font-semibold text-blue\">Remove Account</h1>\n                    <p className=\"font-thin italic\">This cannot be undone.</p>\n                </div>\n                <div className=\"flex flex-wrap text-left mb-6\">\n                <table className=\"flex-auto table-fixed\">\n                            <thead>\n                                <tr>\n                                    <th className=\"p-2\">ID</th>\n                                    <th>Name</th>\n                                    <th hidden={(userType.includes(\"VENDOR\")) ? false : true}>Company</th>\n                                    <th>User Type</th>\n                                </tr>           \n                            </thead>\n                            <tbody>\n                            {(accountsToRemove).map(account => \n                                <tr key={id}>\n                                    <td className=\"p-2\">{id}</td>\n                                    <td>{name}</td>\n                                    <td hidden={(userType.includes(\"VENDOR\")) ? false : true}>{companyName}</td>\n                                    <td>{userType}</td>\n                                </tr>\n                                )}\n                                \n                            </tbody>\n                        </table>\n                </div>\n                <div className=\"flex justify-center\">\n                    <label htmlFor=\"RemoveAccount\" onClick={() => handleDelete()} className=\"btn btn-md btn-wide bg-red border-transparent outline-none rounded-full\" type=\"button\">\n                        Yes, Remove\n                    </label>\n                </div>\n            </div>\n            </div>\n        </>\n        \n    )\n}\n\nexport default RemoveAccount;","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/AssignWorkflowsToUser.js",[],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Accounts/CreateVendorAccount.js",["213","214","215","216","217","218","219","220","221","222","223"],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Accounts/CreateUserAccount.js",["224","225","226","227","228","229"],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Accounts/FollowUpAccount.js",[],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Workflows/CreateWorkflow.js",["230","231"],[],"import { IoGitPullRequestOutline } from 'react-icons/io5';\n\nimport { React, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\";\n\nimport { createWorkflowTemplate } from '../../../apiCalls';\n\n\nfunction CreateWorkflow() {\n\n    const navigate = useNavigate();\n\n    const [workflowName, setWorkflowName] = useState(\"\");\n    const [questionnaires, setQuestionnaires] = useState(\"\");\n\n    const validateForm = () => {\n        if (workflowName.length == 0 || questionnaires.length == 0) {\n            return false;\n        }\n        return true;\n    }\n\n    const handleCreate = () => {\n        console.log(\"INSIDE HANDLE CREATE\");\n        createWorkflowTemplate({ workflowName: workflowName, workflowList: questionnaires.split(\", \") })\n            .then(function (response) {\n                navigate('/workflows');\n            })\n            .catch(function (error) {\n                console.log(\"ERROR CREATING WORKFLOW\")\n            })\n    }\n\n    return (\n        <>\n            <label htmlFor=\"CreateWorkflow\" className=\"btn bg-cyan border-transparent outline-none rounded-full mr-2\">\n                <IoGitPullRequestOutline size={20} className=\"mr-3\"></IoGitPullRequestOutline>\n                Create New Workflow\n            </label>\n\n            <input type=\"checkbox\" id=\"CreateWorkflow\" className=\"modal-toggle\" />\n            <div className=\"modal\">\n                <div className=\"modal-box max-w-2xl relative py-12 px-20\">\n                    <label htmlFor=\"CreateWorkflow\" className=\"btn btn-sm btn-circle bg-red border-transparent absolute right-20 top-12\">✕</label>\n                    <h1 className=\"text-3xl mb-3 font-semibold text-blue\">Create New Workflow</h1>\n                    <form>\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"workflowname\">\n                                Workflow Name\n                            </label>\n                            <input onChange={e => setWorkflowName(e.target.value)} className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"workflowname\" type=\"text\" />\n                        </div>\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-md font-thin\" htmlFor=\"forms\">\n                                Forms\n                            </label>\n                            <label className=\"block text-gray-700 text-xs font-thin mb-2\" htmlFor=\"description\">\n                                Separate forms with a comma (,)\n                            </label>\n                            <input onChange={e => setQuestionnaires(e.target.value)} className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"forms\" type=\"text\" />\n                        </div>\n                        <div className=\"flex justify-center\">\n                            {validateForm()}\n                            <label htmlFor=\"CreateWorkflow\" className=\"btn btn-md btn-wide bg-cyan border-transparent outline-none rounded-full mt-4\" onClick={() => handleCreate()} type=\"button\" disabled={validateForm()}>\n                                Create New Workflow\n                            </label>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </>\n\n    )\n}\n\nexport default CreateWorkflow;","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Workflows/DeleteWorkflow.js",["232","233"],[],"import { React, useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport { AiOutlineDelete } from \"react-icons/ai\";\n\nimport { deleteWorkflow } from '../../../apiCalls';\n\nfunction DeleteWorkflow(props) {\n\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const workflowsData = location.state.workflow;\n    console.log(workflowsData)\n\n    const handleDelete = () => {\n        console.log(\"INSIDE DELETE WORKFLOW\");\n        deleteWorkflow(workflowsData.id)\n            .then(function(response){\n                navigate(\"/workflows\")\n                \n            })\n            .catch(function(error){\n                console.log(\"ERROR DELETING WORKFLOW\")\n            })\n    }\n\n    return (\n        <>\n            <label htmlFor=\"DeleteWorkflow\" className=\"btn bg-red border-transparent rounded-full mr-2\">\n                <AiOutlineDelete size={20} className=\"mr-3\"></AiOutlineDelete>\n                    Delete Workflow\n                </label>\n            \n            <input type=\"checkbox\" id=\"DeleteWorkflow\" className=\"modal-toggle\" />\n            <div className=\"modal\">\n            <div className=\"modal-box max-w-2xl relative py-12 px-20\">\n                <label htmlFor=\"DeleteWorkflow\" className=\"btn btn-sm btn-circle bg-red border-transparent absolute right-20 top-12\">✕</label>\n                <h1 className=\"text-3xl mb-3 font-semibold text-blue\">Confirm Deletion</h1>\n                <form>\n                <div className=\"mb-4\">\n\n                    <label className=\"block text-gray-700 text-lg font-thin my-7 text-center\" htmlFor=\"userid\">\n                        Are you sure you want to delete this workflow?\n                    </label>\n                </div>\n                <div className=\"flex justify-center\">\n                    <label htmlFor=\"DeleteWorkflow\" onClick={() => handleDelete()} className=\"btn btn-md btn-wide bg-cyan border-transparent outline-none rounded-full mt-4\" type=\"button\">\n                        Confirm Deletion\n                    </label>\n                </div>\n                </form>\n            </div>\n            </div>\n        </>\n        \n    )\n}\n\nexport default DeleteWorkflow;","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Workflows/AssignNewUser.js",[],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Workflows/UpdateWorkflow.js",["234","235","236"],[],"import React, { useState } from 'react';\n\nimport { BsGear } from \"react-icons/bs\";\n\nfunction UpateWorkflow(props) {\n\n    const [attachedUserId, setattachedUserId] = useState(props.workflow.attachedUserId);\n    const [workflowName, setworkflowName] = useState(props.workflow.workflowName);\n    const [workflowList, setworkflowList] = useState(props.workflow.workflowList);\n\n    return (\n        <>\n            <label htmlFor=\"UpateWorkflow\" className=\"btn bg-cyan border-transparent outline-none rounded-full mr-2\">\n                <BsGear size={20} className=\"mr-3\"></BsGear>\n                <span className=\"text-sm\">Update Workflow</span>\n            </label>\n\n            <input type=\"checkbox\" id=\"UpateWorkflow\" className=\"modal-toggle\" />\n            <div className=\"modal\">\n                <div className=\"modal-box max-w-2xl relative py-12 px-20\">\n                    <label htmlFor=\"UpateWorkflow\" className=\"btn btn-sm btn-circle bg-red border-transparent absolute right-20 top-12\">✕</label>\n                    <h1 className=\"text-3xl mb-3 font-semibold text-blue\">Update Workflow</h1>\n                    <form>\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"userid\">\n                                User ID\n                            </label>\n                            <input className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"userid\" type=\"text\" defaultValue={attachedUserId} />\n                        </div>\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"workflowname\">\n                                Workflow Name\n                            </label>\n                            <input className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"workflowname\" type=\"text\" defaultValue={workflowName} />\n                        </div>\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-md font-thin\" htmlFor=\"forms\">\n                                Forms\n                            </label>\n                            <label className=\"block text-gray-700 text-xs font-thin mb-2\" htmlFor=\"description\">\n                                Separate forms with a comma (,)\n                            </label>\n                            <input className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"forms\" type=\"text\" defaultValue={workflowList.join(\", \")} />\n                        </div>\n                        <div className=\"flex justify-center\">\n                            <label htmlFor=\"UpateWorkflow\" className=\"btn btn-md btn-wide bg-cyan border-transparent outline-none rounded-full mt-4\" type=\"button\">\n                                Update Workflow\n                            </label>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </>\n\n    )\n}\n\nexport default UpateWorkflow;","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Admin/Accounts/EditUserAccount.js",["237","238","239","240","241"],[],"import React, { useState } from 'react';\n\nimport { MdEdit } from \"react-icons/md\";\n\nimport { useNavigate } from 'react-router-dom';\n\nimport { updateUser } from '../../../apiCalls';\n\nfunction EditUserAccount(props) {\n\n    console.log(props.account)\n\n    const navigate = useNavigate();\n\n    const [id, setId] = useState(props.account.id);\n    const [name, setName] = useState(props.account.name);\n    const [email, setEmail] = useState(props.account.email);\n    const [userType, setUserType] = useState(\"ADMIN\");\n    const [password, setPassword] = useState(props.account.email);\n\n\n    const validateForm = () => {\n        if (id.length == 0 || name.length == 0 || email.length == 0 || userType.length == 0 || password.length == 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    const handleSave = () => {\n        console.log(\"INSIDE HANDLE SAVE\");\n        updateUser({id: id, name: name, email: email, userType: userType, password: password})\n            .then(function(response){\n                // navigate('/accounts');\n                navigate(`/accounts/${id}`, {state: {account: {id: id, name: name, email: email, userType: userType, password: password}}});\n            })\n            .catch(function(error){\n                setId(props.account.id)\n                setName(props.account.name)\n                setEmail(props.account.email)\n                setUserType(props.account.userType)\n                setPassword(props.account.password)\n            })\n    }\n\n    return (\n        <>\n            <label htmlFor=\"EditUserAccount\" className=\"btn btn-xs btn-link text-lg text-blue hover:opacity-75\">\n                <MdEdit></MdEdit>\n            </label>\n            {/* <button className=\"text-blue hover:opacity-75\" htmlFor=\"EditUserAccount\"><MdEdit></MdEdit></button> */}\n\n            \n            <input type=\"checkbox\" id=\"EditUserAccount\" className=\"modal-toggle\" />\n            <div className=\"modal text-left\">\n            <div className=\"modal-box max-w-5xl relative py-12 px-20\">\n                <label htmlFor=\"EditUserAccount\" className=\"btn btn-sm btn-circle bg-red border-transparent absolute right-20 top-12\">✕</label>\n                <h1 className=\"text-3xl mb-3 font-semibold text-blue\">Edit Account</h1>\n                <form>\n                <div id=\"userDetails\">\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"id\">\n                                    ID\n                                </label>\n                                <input defaultValue={id} onChange={e => setId(e.target.value)} className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"id\" type=\"text\"/>\n                            </div>\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"firstname\">\n                                    Name\n                                </label>\n                                <input defaultValue={name} onChange={e => setName(e.target.value)} className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"firstname\" type=\"text\"/>\n                            </div>\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"email\">\n                                    Email\n                                </label>\n                                <input defaultValue={email} onChange={e => setEmail(e.target.value)} className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"email\" type=\"text\"/>\n                            </div>\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"userType\">\n                                    User Type\n                                </label>\n                                <select defaultValue={userType} onChange={e => setUserType(e.target.value)} className=\"select select-bordered shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\">\n                                    <option value=\"ADMIN\">Administrator</option>\n                                    <option value=\"APPROVER\">Approver</option>\n                                </select>     \n                            </div>\n                            <div className=\"mb-6\">\n                                <label className=\"block text-gray-700 text-md font-thin mb-2\" htmlFor=\"password\">\n                                    Password\n                                </label>\n                                <input defaultValue={password} onChange={e => setPassword(e.target.value)} className=\"shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\" id=\"password\" type=\"password\" placeholder=\"******************\"/>\n                            </div>                    \n                        </div>\n                                        \n                    <div className=\"mt-6 flex justify-center\">\n                        {validateForm()}\n                        <label onClick={() => {handleSave()}} htmlFor=\"EditUserAccount\" className=\"btn btn-md btn-wide bg-cyan border-transparent outline-none rounded-full\" type=\"button\" disabled={(validateForm() !== true) ? true : false}>\n                            Save Changes\n                        </label>\n                    </div>\n                    </form>\n            </div>\n            </div>\n        </>\n        \n    )\n}\n\nexport default EditUserAccount;","/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Approver/ApproverDash.js",["242","243"],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/Login.js",["244","245","246","247","248","249","250","251","252"],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/WithoutNav.js",["253"],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/components/WithNav.js",["254"],[],"/Users/jayeyap/Documents/GitHub/g3t1-oop/frontend/src/useToken.js",[],[],{"ruleId":"255","severity":1,"message":"256","line":1,"column":8,"nodeType":"257","messageId":"258","endLine":1,"endColumn":18},{"ruleId":"255","severity":1,"message":"259","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":14},{"ruleId":"255","severity":1,"message":"260","line":18,"column":8,"nodeType":"257","messageId":"258","endLine":18,"endColumn":15},{"ruleId":"255","severity":1,"message":"261","line":2,"column":16,"nodeType":"257","messageId":"258","endLine":2,"endColumn":27},{"ruleId":"255","severity":1,"message":"262","line":14,"column":10,"nodeType":"257","messageId":"258","endLine":14,"endColumn":20},{"ruleId":"255","severity":1,"message":"263","line":14,"column":22,"nodeType":"257","messageId":"258","endLine":14,"endColumn":35},{"ruleId":"264","severity":1,"message":"265","line":25,"column":13,"nodeType":"266","endLine":25,"endColumn":46},{"ruleId":"264","severity":1,"message":"265","line":70,"column":11,"nodeType":"266","endLine":70,"endColumn":280},{"ruleId":"267","severity":1,"message":"268","line":75,"column":11,"nodeType":"266","endLine":75,"endColumn":42},{"ruleId":"267","severity":1,"message":"268","line":80,"column":13,"nodeType":"266","endLine":80,"endColumn":16},{"ruleId":"267","severity":1,"message":"268","line":81,"column":13,"nodeType":"266","endLine":81,"endColumn":33},{"ruleId":"255","severity":1,"message":"269","line":3,"column":10,"nodeType":"257","messageId":"258","endLine":3,"endColumn":17},{"ruleId":"255","severity":1,"message":"270","line":3,"column":19,"nodeType":"257","messageId":"258","endLine":3,"endColumn":26},{"ruleId":"255","severity":1,"message":"271","line":9,"column":7,"nodeType":"257","messageId":"258","endLine":9,"endColumn":16},{"ruleId":"255","severity":1,"message":"272","line":11,"column":7,"nodeType":"257","messageId":"258","endLine":11,"endColumn":17},{"ruleId":"255","severity":1,"message":"273","line":127,"column":11,"nodeType":"257","messageId":"258","endLine":127,"endColumn":23},{"ruleId":"255","severity":1,"message":"274","line":143,"column":11,"nodeType":"257","messageId":"258","endLine":143,"endColumn":30},{"ruleId":"255","severity":1,"message":"275","line":151,"column":11,"nodeType":"257","messageId":"258","endLine":151,"endColumn":25},{"ruleId":"255","severity":1,"message":"276","line":2,"column":26,"nodeType":"257","messageId":"258","endLine":2,"endColumn":32},{"ruleId":"255","severity":1,"message":"277","line":4,"column":23,"nodeType":"257","messageId":"258","endLine":4,"endColumn":34},{"ruleId":"255","severity":1,"message":"278","line":8,"column":8,"nodeType":"257","messageId":"258","endLine":8,"endColumn":21},{"ruleId":"255","severity":1,"message":"279","line":12,"column":32,"nodeType":"257","messageId":"258","endLine":12,"endColumn":44},{"ruleId":"255","severity":1,"message":"280","line":59,"column":11,"nodeType":"257","messageId":"258","endLine":59,"endColumn":23},{"ruleId":"281","severity":1,"message":"282","line":64,"column":17,"nodeType":"257","messageId":"283","endLine":64,"endColumn":32},{"ruleId":"284","severity":1,"message":"285","line":82,"column":59,"nodeType":"286","messageId":"287","endLine":82,"endColumn":61},{"ruleId":"284","severity":1,"message":"288","line":83,"column":59,"nodeType":"286","messageId":"287","endLine":83,"endColumn":61},{"ruleId":"284","severity":1,"message":"285","line":86,"column":98,"nodeType":"286","messageId":"287","endLine":86,"endColumn":100},{"ruleId":"284","severity":1,"message":"288","line":89,"column":96,"nodeType":"286","messageId":"287","endLine":89,"endColumn":98},{"ruleId":"284","severity":1,"message":"285","line":95,"column":54,"nodeType":"286","messageId":"287","endLine":95,"endColumn":56},{"ruleId":"284","severity":1,"message":"285","line":98,"column":54,"nodeType":"286","messageId":"287","endLine":98,"endColumn":56},{"ruleId":"284","severity":1,"message":"285","line":105,"column":114,"nodeType":"286","messageId":"287","endLine":105,"endColumn":116},{"ruleId":"284","severity":1,"message":"285","line":137,"column":110,"nodeType":"286","messageId":"287","endLine":137,"endColumn":112},{"ruleId":"284","severity":1,"message":"285","line":158,"column":74,"nodeType":"286","messageId":"287","endLine":158,"endColumn":76},{"ruleId":"255","severity":1,"message":"289","line":8,"column":8,"nodeType":"257","messageId":"258","endLine":8,"endColumn":25},{"ruleId":"255","severity":1,"message":"290","line":9,"column":8,"nodeType":"257","messageId":"258","endLine":9,"endColumn":21},{"ruleId":"255","severity":1,"message":"291","line":11,"column":8,"nodeType":"257","messageId":"258","endLine":11,"endColumn":29},{"ruleId":"292","severity":1,"message":"293","line":43,"column":10,"nodeType":"294","endLine":43,"endColumn":12,"suggestions":"295"},{"ruleId":"296","severity":1,"message":"297","line":58,"column":25,"nodeType":"266","endLine":58,"endColumn":352},{"ruleId":"255","severity":1,"message":"298","line":3,"column":27,"nodeType":"257","messageId":"258","endLine":3,"endColumn":36},{"ruleId":"255","severity":1,"message":"299","line":9,"column":10,"nodeType":"257","messageId":"258","endLine":9,"endColumn":39},{"ruleId":"255","severity":1,"message":"300","line":13,"column":11,"nodeType":"257","messageId":"258","endLine":13,"endColumn":19},{"ruleId":"255","severity":1,"message":"301","line":17,"column":35,"nodeType":"257","messageId":"258","endLine":17,"endColumn":59},{"ruleId":"255","severity":1,"message":"302","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":20},{"ruleId":"255","severity":1,"message":"303","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":21},{"ruleId":"304","severity":1,"message":"305","line":34,"column":1,"nodeType":"306","endLine":36,"endColumn":3,"suppressions":"307"},{"ruleId":"284","severity":1,"message":"285","line":28,"column":23,"nodeType":"286","messageId":"287","endLine":28,"endColumn":25},{"ruleId":"284","severity":1,"message":"285","line":28,"column":43,"nodeType":"286","messageId":"287","endLine":28,"endColumn":45},{"ruleId":"284","severity":1,"message":"285","line":28,"column":64,"nodeType":"286","messageId":"287","endLine":28,"endColumn":66},{"ruleId":"284","severity":1,"message":"285","line":28,"column":90,"nodeType":"286","messageId":"287","endLine":28,"endColumn":92},{"ruleId":"284","severity":1,"message":"285","line":28,"column":114,"nodeType":"286","messageId":"287","endLine":28,"endColumn":116},{"ruleId":"284","severity":1,"message":"285","line":29,"column":32,"nodeType":"286","messageId":"287","endLine":29,"endColumn":34},{"ruleId":"284","severity":1,"message":"285","line":29,"column":57,"nodeType":"286","messageId":"287","endLine":29,"endColumn":59},{"ruleId":"284","severity":1,"message":"285","line":29,"column":82,"nodeType":"286","messageId":"287","endLine":29,"endColumn":84},{"ruleId":"284","severity":1,"message":"285","line":29,"column":100,"nodeType":"286","messageId":"287","endLine":29,"endColumn":102},{"ruleId":"255","severity":1,"message":"308","line":21,"column":30,"nodeType":"257","messageId":"258","endLine":21,"endColumn":49},{"ruleId":"284","severity":1,"message":"285","line":27,"column":22,"nodeType":"286","messageId":"287","endLine":27,"endColumn":24},{"ruleId":"255","severity":1,"message":"300","line":11,"column":11,"nodeType":"257","messageId":"258","endLine":11,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":27,"column":23,"nodeType":"286","messageId":"287","endLine":27,"endColumn":25},{"ruleId":"284","severity":1,"message":"285","line":27,"column":43,"nodeType":"286","messageId":"287","endLine":27,"endColumn":45},{"ruleId":"284","severity":1,"message":"285","line":27,"column":64,"nodeType":"286","messageId":"287","endLine":27,"endColumn":66},{"ruleId":"284","severity":1,"message":"285","line":27,"column":90,"nodeType":"286","messageId":"287","endLine":27,"endColumn":92},{"ruleId":"284","severity":1,"message":"285","line":27,"column":114,"nodeType":"286","messageId":"287","endLine":27,"endColumn":116},{"ruleId":"284","severity":1,"message":"285","line":28,"column":32,"nodeType":"286","messageId":"287","endLine":28,"endColumn":34},{"ruleId":"284","severity":1,"message":"285","line":28,"column":55,"nodeType":"286","messageId":"287","endLine":28,"endColumn":57},{"ruleId":"284","severity":1,"message":"285","line":28,"column":80,"nodeType":"286","messageId":"287","endLine":28,"endColumn":82},{"ruleId":"284","severity":1,"message":"285","line":28,"column":105,"nodeType":"286","messageId":"287","endLine":28,"endColumn":107},{"ruleId":"284","severity":1,"message":"285","line":28,"column":123,"nodeType":"286","messageId":"287","endLine":28,"endColumn":125},{"ruleId":"255","severity":1,"message":"300","line":11,"column":11,"nodeType":"257","messageId":"258","endLine":11,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":21,"column":23,"nodeType":"286","messageId":"287","endLine":21,"endColumn":25},{"ruleId":"284","severity":1,"message":"285","line":21,"column":43,"nodeType":"286","messageId":"287","endLine":21,"endColumn":45},{"ruleId":"284","severity":1,"message":"285","line":21,"column":64,"nodeType":"286","messageId":"287","endLine":21,"endColumn":66},{"ruleId":"284","severity":1,"message":"285","line":21,"column":88,"nodeType":"286","messageId":"287","endLine":21,"endColumn":90},{"ruleId":"284","severity":1,"message":"285","line":21,"column":112,"nodeType":"286","messageId":"287","endLine":21,"endColumn":114},{"ruleId":"284","severity":1,"message":"285","line":17,"column":33,"nodeType":"286","messageId":"287","endLine":17,"endColumn":35},{"ruleId":"284","severity":1,"message":"285","line":17,"column":63,"nodeType":"286","messageId":"287","endLine":17,"endColumn":65},{"ruleId":"255","severity":1,"message":"309","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"298","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"310","line":7,"column":28,"nodeType":"257","messageId":"258","endLine":7,"endColumn":45},{"ruleId":"255","severity":1,"message":"311","line":8,"column":26,"nodeType":"257","messageId":"258","endLine":8,"endColumn":41},{"ruleId":"255","severity":1,"message":"312","line":9,"column":26,"nodeType":"257","messageId":"258","endLine":9,"endColumn":41},{"ruleId":"284","severity":1,"message":"285","line":23,"column":23,"nodeType":"286","messageId":"287","endLine":23,"endColumn":25},{"ruleId":"284","severity":1,"message":"285","line":23,"column":43,"nodeType":"286","messageId":"287","endLine":23,"endColumn":45},{"ruleId":"284","severity":1,"message":"285","line":23,"column":64,"nodeType":"286","messageId":"287","endLine":23,"endColumn":66},{"ruleId":"284","severity":1,"message":"285","line":23,"column":88,"nodeType":"286","messageId":"287","endLine":23,"endColumn":90},{"ruleId":"284","severity":1,"message":"285","line":23,"column":112,"nodeType":"286","messageId":"287","endLine":23,"endColumn":114},{"ruleId":"255","severity":1,"message":"313","line":4,"column":24,"nodeType":"257","messageId":"258","endLine":4,"endColumn":44},{"ruleId":"255","severity":1,"message":"314","line":32,"column":11,"nodeType":"257","messageId":"258","endLine":32,"endColumn":26},{"ruleId":"255","severity":1,"message":"261","line":3,"column":10,"nodeType":"257","messageId":"258","endLine":3,"endColumn":21},{"ruleId":"284","severity":1,"message":"285","line":26,"column":23,"nodeType":"286","messageId":"287","endLine":26,"endColumn":25},{"ruleId":"284","severity":1,"message":"285","line":26,"column":47,"nodeType":"286","messageId":"287","endLine":26,"endColumn":49},{"ruleId":"284","severity":1,"message":"285","line":34,"column":22,"nodeType":"286","messageId":"287","endLine":34,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":63,"column":13,"nodeType":"266","endLine":63,"endColumn":46},{"ruleId":"284","severity":1,"message":"285","line":72,"column":94,"nodeType":"286","messageId":"287","endLine":72,"endColumn":96},{"ruleId":"284","severity":1,"message":"285","line":73,"column":52,"nodeType":"286","messageId":"287","endLine":73,"endColumn":54},{"ruleId":"284","severity":1,"message":"285","line":81,"column":106,"nodeType":"286","messageId":"287","endLine":81,"endColumn":108},{"ruleId":"284","severity":1,"message":"285","line":82,"column":58,"nodeType":"286","messageId":"287","endLine":82,"endColumn":60},{"ruleId":"304","severity":1,"message":"315","line":4,"column":1,"nodeType":"306","endLine":4,"endColumn":32},{"ruleId":"304","severity":1,"message":"315","line":5,"column":1,"nodeType":"306","endLine":12,"endColumn":3},"no-unused-vars","'WithoutNav' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","'Profile' is defined but never used.","'useNavigate' is defined but never used.","'navbarOpen' is assigned a value but never used.","'setNavbarOpen' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useDrag' is defined but never used.","'useDrop' is defined but never used.","'ITEM_TYPE' is assigned a value but never used.","'inputTypes' is assigned a value but never used.","'moveQuestion' is assigned a value but never used.","'updateQuestionLabel' is assigned a value but never used.","'removeQuestion' is assigned a value but never used.","'MdEdit' is defined but never used.","'useLocation' is defined but never used.","'RemoveAccount' is defined but never used.","'getWorkflows' is defined but never used.","'handleSelect' is assigned a value but never used.","no-redeclare","'updatedAccounts' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'EditVendorAccount' is defined but never used.","'CreateAccount' is defined but never used.","'AssignWorkflowsToUser' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'account.id'. Either include it or remove the dependency array.","ArrayExpression",["316"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useEffect' is defined but never used.","'getIndividualAssignedWorkflow' is defined but never used.","'navigate' is assigned a value but never used.","'setWorkflowAssignedUsers' is assigned a value but never used.","'accountsData' is defined but never used.","'workflowsData' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["317"],"'setAccountsToRemove' is assigned a value but never used.","'useState' is defined but never used.","'setattachedUserId' is assigned a value but never used.","'setworkflowName' is assigned a value but never used.","'setworkflowList' is assigned a value but never used.","'getAssignedWorkflows' is defined but never used.","'renderTemplates' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default",{"desc":"318","fix":"319"},{"kind":"320","justification":"321"},"Update the dependencies array to be: [account.id]",{"range":"322","text":"323"},"directive","",[1197,1199],"[account.id]"]